"""Add repository and file content table

Revision ID: a324a4a963e8
Revises: 56490874b868
Create Date: 2025-04-04 12:06:40.652527

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a324a4a963e8"
down_revision: Union[str, None] = "56490874b868"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "repositories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_repositories_id"), "repositories", ["id"], unique=False)
    op.create_index(
        op.f("ix_repositories_name"), "repositories", ["name"], unique=False
    )
    op.create_index(op.f("ix_repositories_url"), "repositories", ["url"], unique=True)
    op.create_index(
        op.f("ix_repositories_user_id"), "repositories", ["user_id"], unique=False
    )
    op.create_table(
        "file_analyses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("content", sa.String(), nullable=False),
        sa.Column("repository_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["repository_id"],
            ["repositories.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_file_analyses_id"), "file_analyses", ["id"], unique=False)
    op.create_index(
        op.f("ix_file_analyses_repository_id"),
        "file_analyses",
        ["repository_id"],
        unique=False,
    )
    op.drop_index(
        "idx_readme_versions_content_fts",
        table_name="readme_versions",
        postgresql_using="gin",
    )
    op.drop_index(
        "idx_readmes_repo_url_fts", table_name="readmes", postgresql_using="gin"
    )
    op.drop_index("idx_readmes_title_fts", table_name="readmes", postgresql_using="gin")
    op.drop_index(
        "idx_template_content_tsv", table_name="templates", postgresql_using="gin"
    )
    op.drop_index(
        "idx_template_title_content_tsv", table_name="templates", postgresql_using="gin"
    )
    op.drop_index(
        "idx_template_title_tsv", table_name="templates", postgresql_using="gin"
    )
    op.alter_column(
        "users",
        "tokens_last_reset",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "tokens_last_reset",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.create_index(
        "idx_template_title_tsv",
        "templates",
        [sa.text("to_tsvector('english'::regconfig, title::text)")],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        "idx_template_title_content_tsv",
        "templates",
        [
            sa.text(
                "to_tsvector('english'::regconfig, (title::text || ' '::text) || content)"
            )
        ],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        "idx_template_content_tsv",
        "templates",
        [sa.text("to_tsvector('english'::regconfig, content)")],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        "idx_readmes_title_fts",
        "readmes",
        [sa.text("to_tsvector('english'::regconfig, title::text)")],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        "idx_readmes_repo_url_fts",
        "readmes",
        [sa.text("to_tsvector('english'::regconfig, repository_url::text)")],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        "idx_readme_versions_content_fts",
        "readme_versions",
        [sa.text("to_tsvector('english'::regconfig, content)")],
        unique=False,
        postgresql_using="gin",
    )
    op.drop_index(op.f("ix_file_analyses_repository_id"), table_name="file_analyses")
    op.drop_index(op.f("ix_file_analyses_id"), table_name="file_analyses")
    op.drop_table("file_analyses")
    op.drop_index(op.f("ix_repositories_user_id"), table_name="repositories")
    op.drop_index(op.f("ix_repositories_url"), table_name="repositories")
    op.drop_index(op.f("ix_repositories_name"), table_name="repositories")
    op.drop_index(op.f("ix_repositories_id"), table_name="repositories")
    op.drop_table("repositories")
    # ### end Alembic commands ###
