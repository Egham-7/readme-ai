"""Change relationship table names to file_contents

Revision ID: cc86e6320c64
Revises: b1097d9e74dd
Create Date: 2025-04-04 16:01:32.229349

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from pgvector.sqlalchemy import VECTOR  # type: ignore


# revision identifiers, used by Alembic.
revision: str = "cc86e6320c64"
down_revision: Union[str, None] = "b1097d9e74dd"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "file_contents",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("content", sa.String(), nullable=False),
        sa.Column("repository_id", sa.Integer(), nullable=False),
        sa.Column("content_embedding", VECTOR(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["repository_id"],
            ["repositories.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_file_contents_id"), "file_contents", ["id"], unique=False)
    op.create_index(
        op.f("ix_file_contents_repository_id"),
        "file_contents",
        ["repository_id"],
        unique=False,
    )
    op.drop_index("ix_file_analyses_id", table_name="file_analyses")
    op.drop_index("ix_file_analyses_repository_id", table_name="file_analyses")
    op.drop_table("file_analyses")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "file_analyses",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("content", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("repository_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "content_embedding",
            pgvector.sqlalchemy.vector.VECTOR(),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["repository_id"],
            ["repositories.id"],
            name="file_analyses_repository_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="file_analyses_pkey"),
    )
    op.create_index(
        "ix_file_analyses_repository_id",
        "file_analyses",
        ["repository_id"],
        unique=False,
    )
    op.create_index("ix_file_analyses_id", "file_analyses", ["id"], unique=False)
    op.drop_index(op.f("ix_file_contents_repository_id"), table_name="file_contents")
    op.drop_index(op.f("ix_file_contents_id"), table_name="file_contents")
    op.drop_table("file_contents")
    # ### end Alembic commands ###
