"""Add relationships between User and Repository

Revision ID: b1097d9e74dd
Revises: b5428bae75d5
Create Date: 2025-04-04 15:58:02.342411
"""

from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = "b1097d9e74dd"
down_revision: Union[str, None] = "b5428bae75d5"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # First drop the foreign key constraint
    op.drop_constraint("repositories_user_id_fkey", "repositories", type_="foreignkey")

    # Change the user_id column type from Integer to String
    op.alter_column(
        "repositories",
        "user_id",
        existing_type=sa.INTEGER(),
        type_=sa.String(),
        existing_nullable=True,
    )

    # Create the new foreign key constraint
    op.create_foreign_key(None, "repositories", "users", ["user_id"], ["clerk_id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop the foreign key constraint
    op.drop_constraint(None, "repositories", type_="foreignkey")  # type: ignore

    # Change the user_id column type back from String to Integer
    op.alter_column(
        "repositories",
        "user_id",
        existing_type=sa.String(),
        type_=sa.INTEGER(),
        existing_nullable=True,
    )

    # Recreate the original foreign key constraint
    op.create_foreign_key(
        "repositories_user_id_fkey", "repositories", "users", ["user_id"], ["id"]
    )
    # ### end Alembic commands ###
